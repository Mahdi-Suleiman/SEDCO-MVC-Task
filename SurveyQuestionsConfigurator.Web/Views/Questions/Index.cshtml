@model IEnumerable<SurveyQuestionsConfigurator.Entities.Question>

@{
    ViewBag.Title = "Index";
    int i = 1;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-hover" id="myTable">
    <thead>

        <tr>
            <th scope="col">#</th>
            <th>
                @Html.DisplayNameFor(model => model.Order)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr class="toRemove">
            <th scope="row">@(i++)</th>
            <td>
                @Html.DisplayFor(modelItem => item.Order)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.TextAreaFor(modelItem => item.Text, htmlAttributes: new {@class = "form-control", rows = "3", style = "min-width: 80%;resize:vertical", @readonly = "true" })
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID, type = item.Type }, htmlAttributes: new { @class = "btn btn-success" }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID, type = item.Type }, htmlAttributes: new { @class = "btn btn-info" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID, type = item.Type }, htmlAttributes: new { @class = "btn btn-danger" })
            </td>

        </tr>
        }
    </tbody>

</table>


@*<button id="sendmessage">test</button>*@
@section scripts {

    @*Script references. 
    The jQuery library is required and is referenced by default in _Layout.cshtml. 
    Reference the SignalR library.*@ 
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    @*Reference the autogenerated SignalR hub script.*@ 
    <script src="~/signalr/hubs"></script>
    @*SignalR script to update the chat page and send messages.*@
<script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            //chat.client.addNewMessageToPage = function (name, message) {
            chat.client.addNewMessageToPage = function (object) {
                console.log(object);


                console.log("before remove");

                //toRemove
                $('.toRemove').remove();
                console.log("after remove");

                var tType = ["SMILEY", "SLIDER", "STAR"]

                //setTimeout(function () {
                //    //your code here.
                //    $('#myTable tbody > tr').remove();

                //}, 1000);

                //$("#myTable tbody").empty();
    //            $('#myTable').append(`
    //<tbody>
    //</tbody>

    //`);

                // Add the message to the page.
                //$('#myTable').append('<li><strong>' + htmlEncode(name)
                //    + '</strong>: ' + htmlEncode(message) + '</li>');
                console.log("before append");
                var j = 1;

                object.forEach((obj) => {

                    $('#myTable tbody').append(`
            <tr class="toRemove">
            <th scope="row">${j++}</th>
            <td>${obj.Order}</td>
            <td>${tType[obj.Type]}</td>
            <td>
                <textarea class="form-control" cols="20" data-val="true" data-val-maxlength="The field Text must be a string or array type with a maximum length of '3999'." data-val-maxlength-max="3999" data-val-required="The Text field is required." id="item_Text" name="item.Text" readonly="true"
                rows="3" style="min-width: 80%;resize:vertical">${obj.Text}</textarea>
            </td>
    
            <td>
                <a class="btn btn-success" href="/Questions/Edit/${obj.ID}?type=${tType[obj.Type]}">Edit</a> |
                <a class="btn btn-info" href="/Questions/Details/${obj.ID}?type=${tType[obj.Type]}">Details</a> |
                <a class="btn btn-danger" href="/Questions/Delete/${obj.ID}?type=${tType[obj.Type]}">Delete</a>
            </td>
        </tr>
    `);
                })


    //            for (var i = 0; i < object.length; i++) {
    //                console.log("in append");

    //        $('#myTable tbody').append(`
    //        <tr class="toRemove">
    //        <th scope="row">`+ j++ +`</th>
    //        <td>${object[i].Order}</td>
    //        <td>${tType[object[i].Type]}</td>
    //        <td>
    //            <textarea class="form-control" cols="20" data-val="true" data-val-maxlength="The field Text must be a string or array type with a maximum length of '3999'." data-val-maxlength-max="3999" data-val-required="The Text field is required." id="item_Text" name="item.Text" readonly="true"
    //            rows="3" style="min-width: 80%;resize:vertical">${object[i].Text}</textarea>
    //        </td>
    
    //        <td>
    //            <a class="btn btn-success" href="/Questions/Edit/${object[i].ID}?type=${tType[object[i].Type]}">Edit</a> |
    //            <a class="btn btn-info" href="/Questions/Details/${object[i].ID}?type=${tType[object[i].Type]}">Details</a> |
    //            <a class="btn btn-danger" href="/Questions/Delete/${object[i].ID}?type=${tType[object[i].Type]}">Delete</a>
    //        </td>
    //    </tr>
    //`);
    //            }
                console.log("after remove");


                @*$('#myTable tbody').append(`
            <tr>
            <th scope="row">@(i++)</th>
            <td>
                order
            </td>
            <td>
                type
            </td>
            <td>
                text
            </td>
            <td>
                mmm |
                lll |
                kkk
            </td>

        </tr>
    `);*@

            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send([{ ID: 1075, Order: 1, Text: '1', Type: 0 }]);
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        //function htmlEncode(value) {
        //    var encodedValue = $('<div />').text(value).html();
        //    return encodedValue;
        //}
</script>

}